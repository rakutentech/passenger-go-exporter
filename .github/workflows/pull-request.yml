name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.18'
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: download modules
      if: steps.cache.outputs.cache-hit != 'true'
      run: go mod download
    - name: build
      run: go build . 
    - name: test
      run: go test -json ./... > test.json
    - name: annotate tests
      if: always()
      uses: guyarb/golang-test-annotations@v0.2.0
      with:
        test-results: test.json
  lint:
    name: Lint
    strategy:
      matrix:
        go-version: [1.18]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        stable: 'true'
        go-version: '1.18'
    - uses: golangci/golangci-lint-action@v2
      with:
        skip-go-installation: true